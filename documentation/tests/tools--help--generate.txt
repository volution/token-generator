>>  z-tokens generate --help


  -p --token-pattern  {pattern}
    **  see the `patterns` command for available identifiers

  -c --token-count  {count}
    **  generate more than one token

  -s --token-separator  {separator}
    **  separator after each token
  -n --token-separator-none
    **  no separator after each token
  -z --token-separator-null
    **  `\0` separator after each token

  -g --group-size  {count}
    **  output tokens in groups

  --group-separator  {separator}
    **  separator between each group

  --output-flush
    **  flush output after each token

  --hash-filter
    **  acceptance hash enabled (currently xxh3-64)
    **  UNSTABLE

  --hash-seed  {hash-seed}
    **  acceptance hash seed
    **  UNSTABLE

  --hash-mask-value  {u64}
    **  acceptance hash mask value
    **  UNSTABLE

  --hash-mask-bits  {u8}
    **  acceptance hash mask bits
    **  UNSTABLE

  --hash-expected  {hash-expected}
    **  acceptance hash expected
    **  UNSTABLE

  -C
    **  compact output, skip optional separators and groups
  --compact  {boolean}

  --token-skip-mandatory-separators  {boolean}
    **  skip token mandatory separators

  --token-skip-optional-separators  {boolean}
    **  skip token optional separators

  --random-os
    ?=  default
    **  use OS secure random generator
  --random-testing
    **  unsafe constant generator
    !!  DO-NOT-USE
  --random-chacha20  {key}
    **  deterministic generator
    !!  EXPERIMENTAL

  --describe
    **  describe pattern characteristics

  -v --version

  -h --help

