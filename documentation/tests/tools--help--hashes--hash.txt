>>  z-tokens hashes hash --help


  -a --algorithm  {algorithm}
    **  hashing algorithm
  --md5
    **  use MD5
  --sha1
    **  use SHA1
  --sha2
    **  use one of SHA2
  --sha2-224
    **  use SHA2-224
  --sha2-256
    **  use SHA2-256
  --sha2-384
    **  use SHA2-384
  --sha2-512
    **  use SHA2-512
  --sha3
    **  use one of SHA3
  --sha3-224
    **  use SHA3-224
  --sha3-256
    **  use SHA3-256
  --sha3-384
    **  use SHA3-384
  --sha3-512
    **  use SHA3-512
  --shake128
    **  use Shake128
  --shake256
    **  use Shake256
  --git-sha1
    **  use Git SHA1 flavour
  --git-sha2
    **  use Git SHA2 flavour
  --blake2
    **  use Blake2s or Blake2b
  --blake2s
    **  use Blake2s
  --blake2b
    **  use Blake2b
  --blake3
    **  use Blake3
  --siphash
    **  use one of SipHash
    !!  WEAK
  --siphash-64
    **  use SipHash-64
    !!  WEAK
  --siphash-128
    **  use SipHash-128
    !!  WEAK
  --seahash
    **  use SeaHash
    !!  WEAK
  --highwayhash
    **  use one of HighwayHash
    !!  WEAK
  --highwayhash-64
    **  use HighwayHash-64
    !!  WEAK
  --highwayhash-128
    **  use HighwayHash-128
    !!  WEAK
  --highwayhash-256
    **  use HighwayHash-256
    !!  WEAK
  --xxhash
    **  use one of xxHash
    !!  WEAK
  --xxhash-32
    **  use xxHash-32
    !!  WEAK
  --xxhash-64
    **  use xxHash-64
    !!  WEAK
  --xxh3
    **  use Xxh3
    !!  WEAK
    !!  EXPERIMENTAL
  --xxh3-64
    **  use xxh3-64
    !!  WEAK
    !!  EXPERIMENTAL
  --xxh3-128
    **  use xxh3-128
    !!  WEAK
    !!  EXPERIMENTAL
  --djb2
    **  use djb2
    !!  WEAK
  --sdbm
    **  use SDBM
    !!  WEAK
  --fnv1a
    **  use one of FNV1a
    !!  WEAK
  --fnv1a-32
    **  use FNV1a-32
    !!  WEAK
  --fnv1a-64
    **  use FNV1a-64
    !!  WEAK
  --crc
    **  use one of CRC
    !!  WEAK
  --crc8
    **  use CRC8
    !!  WEAK
  --crc16
    **  use CRC16
    !!  WEAK
  --crc32
    **  use CRC32
    !!  WEAK
  --crc32c
    **  use CRC32C
    !!  WEAK
  --crc64
    **  use CRC64
    !!  WEAK
  --adler
    **  use one of Adler
    !!  WEAK
  --adler32
    **  use Adler32
    !!  WEAK
  --scrypt
    **  use Scrypt
    !!  EXPERIMENTAL
  --argon2
    **  use one of Argon2 family
    !!  EXPERIMENTAL
  --argon2d
    **  use Argon2d
    !!  EXPERIMENTAL
  --argon2i
    **  use Argon2i
    !!  EXPERIMENTAL
  --argon2id
    **  use Argon2id
    !!  EXPERIMENTAL

  -s --size  {size}
    **  hash size in bytes
  --8b --1B
    **  8 bits / 1 byte
  --16b --2B
    **  16 bits / 2 bytes
  --32b --4B
    **  32 bits / 4 bytes
  --64b --8B
    **  64 bits / 8 bytes
  --128b --16B
    **  128 bits / 16 bytes
  --256b --32B
    **  256 bits / 32 bytes
  --512b --64B
    **  512 bits / 64 bytes
  --1024b --128B
    **  1024 bits / 128 bytes
  --2048b --256B
    **  2048 bits / 256 bytes
  --4096b --512B
    **  4096 bits / 512 bytes
  --8192b --1024B
    **  8192 bits / 1024 bytes

  -t --token  {string}
    **  use this argument
  -f --file  {path}
    **  read from file
  -i --stdin
    **  read from stdin
  -e --empty
    **  empty

  -c --inputs-concatenate
    ?=  default for one input
    **  concatenate inputs
  -C --inputs-canonicalize
    ?=  default for two or more inputs
    **  canonicalize inputs

  --truncate-size  {size}
    **  truncate the hash to output size in bytes

  --truncate-right
    ?=  default
    **  if truncating, discard bytes from the right of the hash
  --truncate-left
    **  if truncating, discard bytes from the left of the hash

  --output-left-to-right
    ?=  default
    **  copy from left-to-right bytes from the (possibly truncated) hash
  --output-right-to-left --output-reversed
    **  copy from right-to-left bytes from the (possibly truncated) hash

  -v --version

  -h --help

