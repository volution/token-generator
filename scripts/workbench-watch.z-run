#!/dev/null




--<< watchexec / exec
	
	test "${#}" -ge 1
	
	_workbench="$( exec -- readlink -e -- . )"
	
	_watchexec_arguments=(
			
			--watch "${_workbench}"
			
			--filter "sources/**"
			--filter "embedded/**"
			--ignore "embedded/build/*"
			
			--debounce=250
			--on-busy-update=queue
			
			--shell=none
			--no-environment
			
			--no-default-ignore
			--no-global-ignore
			--no-project-ignore
			--no-vcs-ignore
			
		)
	
	exec -- \
	watchexec \
			"${_watchexec_arguments[@]}" -- \
	"${ZRUN}" ':: watchexec / exec / delegate' "${@}" \
	#
!!




--<< watchexec / exec / delegate
	
	test "${#}" -ge 1
	
	printf -- '[--]\n\n' >&2
	
	if "${ZRUN}" "${@}" ; then
		printf -- '\n' >&2
	else
		printf -- '\n[ee]  failed!\n' >&2
	fi
	printf -- '[--]\n' >&2
!!




--<< workbench / outputs
	
	_scratch="${__CARGO_LOCAL__SCRATCH}"
	_outputs="${__OUTPUTS}"
	
	if test ! -e "${_outputs}" ; then
		if test ! -e "${_scratch}/outputs" ; then
			mkdir -- "${_scratch}/outputs"
		fi
		ln -s -T -- "${_scratch}/outputs" "${_outputs}"
	fi
	
	test -d "${_outputs}"
	
	for _folder in binaries markers tests ; do
		if test ! -d "${_outputs}/${_folder}" ; then
			mkdir -- "${_outputs}/${_folder}"
		fi
	done
	
	printf -- '%s\n' "${_outputs}"
!!

